{"version":3,"sources":["components/Feedback/FeedbackList.js","components/Section/Section.js","components/Statistics/Statistics.js","App.js","index.js","components/Feedback/FeedbackList.module.css"],"names":["FeedbackList","options","onLeaveFeedback","className","s","list","map","el","type","name","onClick","button","Section","props","title","children","Statistics","good","neutral","bad","total","positivePercentage","defaultProps","App","state","handleCount","e","currentTarget","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","parseInt","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2UAKe,SAASA,EAAT,GAAsD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC7C,OACA,oBAAIC,UAAWC,IAAEC,KAAjB,SACKJ,EAAQK,KAAI,SAAAC,GAAE,OACb,6BACE,wBACEC,KAAK,SACLC,KAAMF,EACNG,QAASR,EACTC,UAAYC,IAAEO,OAJhB,SAMGJ,KAPIA,QCUFK,MAfjB,SAAiBC,GACb,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SACf,OACE,qCACE,6BAAKD,IACJC,MCLT,SAASC,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC7C,OACE,mCACGD,EAAQ,EACP,+BACE,6BACE,uCACQ,+BAAOH,SAGjB,6BACE,0CACW,+BAAOC,SAGpB,6BACE,sCACO,+BAAOC,SAGhB,wCACS,+BAAOC,OAEhB,oDACqB,iCAAOC,EAAP,cAIvB,oDAMRL,EAAWM,aAAe,CACxBL,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAUPL,QC9CXO,G,kNACJC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTM,YAAc,SAAAC,GACZ,IAAMjB,EAAOiB,EAAEC,cAAclB,KAC7B,EAAKmB,UAAS,SAAAC,GAAS,sBACpBpB,EAAOoB,EAAUpB,GAAQ,O,EAG9BqB,mBAAqB,WACnB,MAA+B,EAAKN,MACpC,OADA,EAAQP,KAAR,EAAcC,QAAd,EAAuBC,K,EAGzBY,gCAAkC,WAChC,IAAQd,EAAS,EAAKO,MAAdP,KACR,OAAOe,SAAUf,EAAO,EAAKa,qBAAwB,M,4CAGrD,WACE,MAA+BG,KAAKT,MAA5BP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACzB,OACE,qCACA,cAAC,EAAD,CAASL,MAAM,wBAAf,SACE,cAACd,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB+B,KAAKR,gBAG1B,cAAC,EAAD,CAASX,MAAM,aAAf,SACE,cAAC,EAAD,CACEG,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,KAAKH,qBACZT,mBAAoBY,KAAKF,6C,GAtCfG,cA6CHX,IC7CfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCV1BC,EAAOC,QAAU,CAAC,KAAO,2BAA2B,OAAS,gC","file":"static/js/main.851bb32b.chunk.js","sourcesContent":["import React from \"react\";\nimport s from './FeedbackList.module.css'\n\n\n\nexport default function FeedbackList ({ options, onLeaveFeedback }) {\n    return (\n    <ul className={s.list}>\n        {options.map(el => (\n          <li key={el}>\n            <button\n              type=\"button\"\n              name={el}\n              onClick={onLeaveFeedback}\n              className ={s.button}\n            >\n              {el}\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n    }\n\n","import React from \"react\";\nimport PropTypes from 'prop-types'\n\n\nfunction Section(props) {\n    const { title, children } = props;\n    return (\n      <>\n        <h1>{title}</h1>\n        {children}\n      </>\n    );\n  }\n  \n  Section.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.element.isRequired,\n  };\n  \n  export default Section;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n    return (\n      <>\n        {total > 0 ? (\n          <ul>\n            <li>\n              <p>\n                Good: <span>{good}</span>\n              </p>\n            </li>\n            <li>\n              <p>\n                Neutral: <span>{neutral}</span>\n              </p>\n            </li>\n            <li>\n              <p>\n                Bad: <span>{bad}</span>\n              </p>\n            </li>\n            <p>\n              Total: <span>{total}</span>\n            </p>\n            <p>\n              Positive Feedback: <span>{positivePercentage} %</span>\n            </p>\n          </ul>\n        ) : (\n          <p>No feedback given</p>\n        )}\n      </>\n    );\n  }\n  \n  Statistics.defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    positivePercentage: 0,\n  };\n  Statistics.propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n    total: PropTypes.number,\n    positivePercentage: PropTypes.number,\n  };\n  \n  export default Statistics;","import { Component } from 'react';\nimport FeedbackList from './components/Feedback/FeedbackList';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\nhandleCount = e => {\n  const name = e.currentTarget.name;\n  this.setState(prevState => ({\n    [name]: prevState[name] + 1,\n  }));\n};\ncountTotalFeedback = () => {\n  const { good, neutral, bad } = this.state;\n  return good + neutral + bad;\n};\ncountPositiveFeedbackPercentage = () => {\n  const { good } = this.state;\n  return parseInt((good / this.countTotalFeedback()) * 100);\n};\n\n  render() {\n    const { good, neutral, bad } = this.state;\n  return (\n    <>\n    <Section title=\"Please leave feedback\">\n      <FeedbackList\n        options={['good', 'neutral', 'bad']}\n        onLeaveFeedback={this.handleCount}\n      />\n    </Section>\n    <Section title=\"Statistics\">\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={this.countTotalFeedback()}\n        positivePercentage={this.countPositiveFeedbackPercentage()}\n      />\n    </Section>\n  </>\n  );\n    }\n}\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './style.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackList_list__2hOW9\",\"button\":\"FeedbackList_button__3HtqC\"};"],"sourceRoot":""}