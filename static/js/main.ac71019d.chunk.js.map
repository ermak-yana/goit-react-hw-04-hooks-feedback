{"version":3,"sources":["components/Feedback/FeedbackList.module.css","components/Feedback/FeedbackList.js","components/Section/Section.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","FeedbackList","options","onLeaveFeedback","className","s","list","map","el","type","name","onClick","button","Section","props","title","children","Statistics","good","neutral","bad","total","positivePercentage","defaultProps","App","useState","setGood","setNeutral","setBad","countTotalFeedback","target","prevState","parseInt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,OAAS,+B,gLCI9C,SAASC,EAAT,GAAsD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC7C,OACA,oBAAIC,UAAWC,IAAEC,KAAjB,SACKJ,EAAQK,KAAI,SAAAC,GAAE,OACb,6BACE,wBACEC,KAAK,SACLC,KAAMF,EACNG,QAASR,EACTC,UAAYC,IAAEO,OAJhB,SAMGJ,KAPIA,QCUFK,MAfjB,SAAiBC,GACb,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SACf,OACE,qCACE,6BAAKD,IACJC,MCLT,SAASC,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC7C,OACE,mCACGD,EAAQ,EACP,+BACE,6BACE,uCACQ,+BAAOH,SAGjB,6BACE,0CACW,+BAAOC,SAGpB,6BACE,sCACO,+BAAOC,SAGhB,wCACS,+BAAOC,OAEhB,oDACqB,iCAAOC,EAAP,cAIvB,oDAMRL,EAAWM,aAAe,CACxBL,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAUPL,Q,MC/CF,SAASO,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOL,EAAP,KAAYQ,EAAZ,KAuBMC,EAAqB,WACzB,OAAOX,EAAOC,EAAUC,GAM1B,OACE,qCACE,cAAC,EAAD,CAASL,MAAM,wBAAf,SACE,cAACd,EAAD,CAAcC,QA/BJ,CAAC,OAAQ,UAAW,OA+BEC,gBA7BlB,SAAC,GACnB,OADkC,EAAb2B,OACNpB,MACb,IAAK,OACHgB,GAAQ,SAACK,GAAD,OAAeA,EAAY,KACnC,MAEF,IAAK,UACHJ,GAAW,SAACI,GAAD,OAAeA,EAAY,KACtC,MAEF,IAAK,MACHH,GAAO,SAACG,GAAD,OAAeA,EAAY,KAClC,MAEF,QACE,aAgBF,cAAC,EAAD,CAAShB,MAAM,aAAf,SACE,cAAC,EAAD,CACEG,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOQ,IACPP,mBAdCU,SAAUd,EAAOW,IAAwB,YC7BpDI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ac71019d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackList_list__2hOW9\",\"button\":\"FeedbackList_button__3HtqC\"};","import React from \"react\";\nimport s from './FeedbackList.module.css'\n\n\n\nexport default function FeedbackList ({ options, onLeaveFeedback }) {\n    return (\n    <ul className={s.list}>\n        {options.map(el => (\n          <li key={el}>\n            <button\n              type=\"button\"\n              name={el}\n              onClick={onLeaveFeedback}\n              className ={s.button}\n            >\n              {el}\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n    }\n\n","import React from \"react\";\nimport PropTypes from 'prop-types'\n\n\nfunction Section(props) {\n    const { title, children } = props;\n    return (\n      <>\n        <h1>{title}</h1>\n        {children}\n      </>\n    );\n  }\n  \n  Section.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.element.isRequired,\n  };\n  \n  export default Section;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n    return (\n      <>\n        {total > 0 ? (\n          <ul>\n            <li>\n              <p>\n                Good: <span>{good}</span>\n              </p>\n            </li>\n            <li>\n              <p>\n                Neutral: <span>{neutral}</span>\n              </p>\n            </li>\n            <li>\n              <p>\n                Bad: <span>{bad}</span>\n              </p>\n            </li>\n            <p>\n              Total: <span>{total}</span>\n            </p>\n            <p>\n              Positive Feedback: <span>{positivePercentage} %</span>\n            </p>\n          </ul>\n        ) : (\n          <p>No feedback given</p>\n        )}\n      </>\n    );\n  }\n  \n  Statistics.defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    positivePercentage: 0,\n  };\n  Statistics.propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n    total: PropTypes.number,\n    positivePercentage: PropTypes.number,\n  };\n  \n  export default Statistics;","import { useState } from \"react\";\nimport FeedbackList from \"./components/Feedback/FeedbackList\";\nimport Section from \"./components/Section\";\nimport Statistics from \"./components/Statistics\";\n\nimport \"./App.css\";\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const options = [\"good\", \"neutral\", \"bad\"];\n\n  const handleCount = ({ target }) => {\n    switch (target.name) {\n      case \"good\":\n        setGood((prevState) => prevState + 1);\n        break;\n\n      case \"neutral\":\n        setNeutral((prevState) => prevState + 1);\n        break;\n\n      case \"bad\":\n        setBad((prevState) => prevState + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    return parseInt((good / countTotalFeedback()) * 100);\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackList options={options} onLeaveFeedback={handleCount} />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './style.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}